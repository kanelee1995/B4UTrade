{"version":3,"sources":["Component/StockDaily.js"],"names":["StockTable","userInput","useState","tableData","settableData","key","API_KEYS","twelveData","columns","title","field","render","rowData","datetime","slice","open","close","num","Number","Math","round","high","low","useEffect","options","method","url","params","symbol","interval","outputsize","format","headers","axios","request","then","response","data","catch","error","console","div","animate","opacity","initial","exit","className","search","headerStyle","backgroundColor","color","localization","body","emptyDataSourceMessage"],"mappings":"0LAoHeA,UA9GI,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAClB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAMC,IAASC,WAUfC,EAAU,CACZ,CACIC,MAAO,OACPC,MAAO,WACPC,OAAQ,SAACC,GAAD,OAAaA,EAAQC,SAASC,MAAM,KAEhD,CACIL,MAAO,QACPE,OAAQ,SAACC,GAAD,OAhBUG,EAiByBH,EAAQG,KAjB3BC,EAiBiCJ,EAAQI,MAb1CC,GAHlBC,OAAOF,GAASE,OAAOH,IAASG,OAAOH,GAAS,IAIlDI,KAAKC,MAAY,IAANH,GAAa,IAavB,IAdkB,IAACA,EAJLF,EAAMC,IA2B5B,CACIP,MAAO,OACPC,MAAO,OACPC,OAAQ,SAACC,GAAD,OAAaO,KAAKC,MAAqB,IAAfR,EAAQG,MAAc,MAE1D,CACIN,MAAO,QACPC,MAAO,QACPC,OAAQ,SAACC,GAAD,OAAaO,KAAKC,MAAsB,IAAhBR,EAAQI,OAAe,MAE3D,CACIP,MAAO,OACPC,MAAO,OACPC,OAAQ,SAACC,GAAD,OAAaO,KAAKC,MAAqB,IAAfR,EAAQS,MAAc,MAE1D,CACIZ,MAAO,MACPC,MAAO,MACPC,OAAQ,SAACC,GAAD,OAAaO,KAAKC,MAAoB,IAAdR,EAAQU,KAAa,MAEzD,CACIb,MAAO,MACPC,MAAO,WA+Bf,OA3BAa,qBAAU,WACN,IAAMC,EAAU,CACZC,OAAQ,MACRC,IAAK,kDACLC,OAAQ,CACJC,OAAO,GAAD,OAAK3B,GACX4B,SAAU,OACVC,WAAY,KACZC,OAAQ,QAEZC,QAAS,CACL,iBAAiB,GAAjB,OAAqB3B,GACrB,kBAAmB,gCAI3B4B,IACKC,QAAQV,GACRW,MAAK,SAAUC,GACZhC,EAAagC,EAASC,KAAT,WAGhBC,OAAM,SAAUC,GACbC,QAAQD,MAAMA,QAEvB,CAACtC,IAGA,cAAC,IAAOwC,IAAR,CACIC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjBG,UAAU,aAJd,SAMI,cAAC,IAAD,CACItC,QAASA,EACT6B,KAAMlC,EACNM,MAAM,mBACNe,QAAS,CACLuB,QAAQ,EACRC,YAAa,CAAEC,gBAAiB,YAAaC,MAAO,YAGxDC,aAAc,CACVC,KAAM,CACFC,uBAAwB","file":"static/js/5.f6fb7057.chunk.js","sourcesContent":["import MaterialTable from \"material-table\";\r\nimport { motion } from \"framer-motion\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_KEYS from \"../api\";\r\n\r\nconst StockTable = ({ userInput }) => {\r\n    const [tableData, settableData] = useState([]);\r\n    const key = API_KEYS.twelveData;\r\n\r\n    const changeCalculator = (open, close) => {\r\n        return ((Number(close) - Number(open)) / Number(open)) * 100;\r\n    };\r\n\r\n    const changeResultToPercent = (num) => {\r\n        return Math.round(num * 100) / 100;\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Date\",\r\n            field: \"datetime\",\r\n            render: (rowData) => rowData.datetime.slice(5),\r\n        },\r\n        {\r\n            title: \"Chg %\",\r\n            render: (rowData) =>\r\n                changeResultToPercent(changeCalculator(rowData.open, rowData.close)) +\r\n                \"%\",\r\n            // cellStyle: (rowData) => ({\r\n            //   color: rowData < 0 ? \"red\" : \"rgb(6, 214, 160)\",\r\n            // }),\r\n        },\r\n        // {\r\n        //   title: \"Previous Close\",\r\n        //   render: (rowData) => Math.round(rowData.open * 100) / 100,\r\n        // },\r\n        {\r\n            title: \"Open\",\r\n            field: \"open\",\r\n            render: (rowData) => Math.round(rowData.open * 100) / 100,\r\n        },\r\n        {\r\n            title: \"Close\",\r\n            field: \"close\",\r\n            render: (rowData) => Math.round(rowData.close * 100) / 100,\r\n        },\r\n        {\r\n            title: \"High\",\r\n            field: \"high\",\r\n            render: (rowData) => Math.round(rowData.high * 100) / 100,\r\n        },\r\n        {\r\n            title: \"Low\",\r\n            field: \"low\",\r\n            render: (rowData) => Math.round(rowData.low * 100) / 100,\r\n        },\r\n        {\r\n            title: \"Vol\",\r\n            field: \"volume\",\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const options = {\r\n            method: \"GET\",\r\n            url: \"https://twelve-data1.p.rapidapi.com/time_series\",\r\n            params: {\r\n                symbol: `${userInput}`,\r\n                interval: \"1day\",\r\n                outputsize: \"90\",\r\n                format: \"json\",\r\n            },\r\n            headers: {\r\n                \"x-rapidapi-key\": `${key}`,\r\n                \"x-rapidapi-host\": \"twelve-data1.p.rapidapi.com\",\r\n            },\r\n        };\r\n\r\n        axios\r\n            .request(options)\r\n            .then(function (response) {\r\n                settableData(response.data[\"values\"]);\r\n                // console.log(response.data[\"values\"]);\r\n            })\r\n            .catch(function (error) {\r\n                console.error(error);\r\n            });\r\n    }, [userInput]);\r\n\r\n    return (\r\n        <motion.div\r\n            animate={{ opacity: 1 }}\r\n            initial={{ opacity: 0 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"stockTable\"\r\n        >\r\n            <MaterialTable\r\n                columns={columns}\r\n                data={tableData}\r\n                title=\"Daily Open/Close\"\r\n                options={{\r\n                    search: false,\r\n                    headerStyle: { backgroundColor: \"#00000000\", color: \"#e9ecef\" },\r\n                    // rowStyle: { backgroundColor: \"#00000015\", color: \"#e9ecef\" },\r\n                }}\r\n                localization={{\r\n                    body: {\r\n                        emptyDataSourceMessage: \"Loading data...\",\r\n                    },\r\n                }}\r\n            />\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default StockTable;\r\n"],"sourceRoot":""}